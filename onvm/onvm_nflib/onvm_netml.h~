#ifndef _ONVM_NETML_H
#define _ONVM_NETML_H

#define MAX_GPU_IMAGE 1
#define NUM_IN_PKTS 92
#define NUM_SIZE 4 //4 bytes number
#define IMAGE_SIZE 3*227*227
#define NUM_OF_PKTS IMAGE_SIZE/(NUM_IN_PKTS * NUM_SIZE)
#define IMAGE_BATCH 256

typedef enum data_status{empty, occupied, ready} data_status; //empty... data can be filled, occupied: some pointers available, ready: ready to be processed i.e. data filled.
typedef struct data_struct{
  int position;
  float data_array[NUM_IN_PKTS];
}data_struct;

void * gpu_image_buffers[MAX_GPU_IMAGE];

void transfer_to_gpu(void ** ptrs_from_pkts, int image_id, int num_of_pointers);

typedef struct image_data{
  int image_id;
  void ** img_data_ptrs;
  float *image_data; //the entire data array
  int num_data_points_stored;
  data_status status;
} image_data;

image_data *images;

void image_init(void);

#endif
